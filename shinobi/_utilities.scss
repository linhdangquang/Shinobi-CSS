@use 'sass:math';
@use 'variables' as var;
$utilities: (
    "padding": (
        "prefix": "p",
        "values": (
            "0": 0,
            "1": var.$base-padding,
            "2": var.$base-padding * 2,
            "3": var.$base-padding * 4,
            "4": var.$base-padding * 6,
            "5": var.$base-padding * 8
        ),
    ),
    "padding-left": (
        "prefix": "pl",
        "values": (
            "0": 0,
            "1": var.$base-padding,
            "2": var.$base-padding * 2,
            "3": var.$base-padding * 4,
            "4": var.$base-padding * 6,
            "5": var.$base-padding * 8
        ),
    ),
    "padding-right": (
        "prefix": "pr",
        "values": (
            "0": 0,
            "1": var.$base-padding,
            "2": var.$base-padding * 2,
            "3": var.$base-padding * 4,
            "4": var.$base-padding * 6,
            "5": var.$base-padding * 8
        ),
    ),
    "padding-top": (
        "prefix": "pt",
        "values": (
            "0": 0,
            "1": var.$base-padding,
            "2": var.$base-padding * 2,
            "3": var.$base-padding * 4,
            "4": var.$base-padding * 6,
            "5": var.$base-padding * 8
        ),
    ),
    "padding-bottom": (
        "prefix": "pb",
        "values": (
            "0": 0,
            "1": var.$base-padding,
            "2": var.$base-padding * 2,
            "3": var.$base-padding * 4,
            "4": var.$base-padding * 6,
            "5": var.$base-padding * 8
        ),
    ),
    "margin": (
        "prefix": "m",
        "values": (
            "0": 0,
            "1": var.$base-margin,
            "2": var.$base-margin * 2,
            "3": var.$base-margin * 4,
            "4": var.$base-margin * 6,
            "5": var.$base-margin * 8
        ),
    ),
    "margin-left": (
        "prefix": "ml",
        "values": (
            "0": 0,
            "1": var.$base-margin,
            "2": var.$base-margin * 2,
            "3": var.$base-margin * 4,
            "4": var.$base-margin * 6,
            "5": var.$base-margin * 8
        ),
    ),
    "margin-right": (
        "prefix": "mr",
        "values": (
            "0": 0,
            "1": var.$base-margin,
            "2": var.$base-margin * 2,
            "3": var.$base-margin * 4,
            "4": var.$base-margin * 6,
            "5": var.$base-margin * 8
        ),
    ),
    "margin-top": (
        "prefix": "mt",
        "values": (
            "0": 0,
            "1": var.$base-margin,
            "2": var.$base-margin * 2,
            "3": var.$base-margin * 4,
            "4": var.$base-margin * 6,
            "5": var.$base-margin * 8
        ),
    ),
    "margin-bottom": (
        "prefix": "mb",
        "values": (
            "0": 0,
            "1": var.$base-margin,
            "2": var.$base-margin * 2,
            "3": var.$base-margin * 4,
            "4": var.$base-margin * 6,
            "5": var.$base-margin * 8
        ),
    ),
    "opacity": (
        "prefix": "o",
        "values": (
            "10": 0.1,
            "20": 0.2,
            "30": 0.3,
            "40": 0.4,
            "50": 0.5,
            "60": 0.6,
            "70": 0.7,
            "80": 0.8,
            "90": 0.9,
            "100": 1
        )
    ),
    "border-radius": (
        "prefix": "br",
        "values": (
            "default": var.$base-border-radius,
            "none": 0,
            "xs": math.div(var.$base-border-radius, 4),
            "sm": math.div(var.$base-border-radius, 2),
            "lg": var.$base-border-radius * 2,
            "full": 50%
        )
    ),
    "display": (
        "prefix": "display",
        "values": (
            "n": none,
            "b": block,
            "f": flex,
            "i": inline,
            "i-b": inline-block
        )
    ),
    "font-size": (
        "prefix": "font",
        "values": (
            "sm": var.$font-size-sm,
            "md": var.$base-font-size,
            "lg": var.$font-size-lg,
            "xl": var.$font-size-xl,
            "xxl": var.$font-size-xxl
        )
    )

);

// generate utility classes
@each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
        @if($k == "default") {
            .#{$prefix} {
                #{$property}: $v;
            }
        } @else {
            .#{$prefix}-#{$k}{
                #{$property}: $v;
            }
        }
    }
}